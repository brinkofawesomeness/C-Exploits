Sploit2 takes advantage of the exec call in line 190, where it calls chown. This exploit was inspired by the article "https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" that was linked in one of the class announcements. Because the BCVS program doesn't really check the PATH variable, we're free to modify it how we please and have it call a malicious program we write when it calls execlp.

# sploit2.sh LINE BY LINE

1.) Changing directory to where BCVS is already installed in the VM.
2.) This creates a new file that simply contains the command "sudo su" which will help us get root access later.
3.) Chmod 777 makes this executable by anyone.
4-6.) This writes a c program that was specified in the article referenced above, which sets the userID and groupID as root before calling the executable we previously made.
7.) Compiling the c program and naming the executable "chown", which we will force the BCVS program to mistakenly call.
8.) This prepends the $PATH variable with the current directory, so when the program looks to execute the "chown command, it will look in our directory where our malicious program is first.
9.) Check in the "chown" executable, so we can check it back out.
10.) Check out the "chown" executable, which will call the execlp command in line 190, then look for the "chown" executable in the $PATH variable we modified. It will find our malicious chown program, call the "pwn" executable with root privileges, which will call "sudo su" and give us a root shell!
